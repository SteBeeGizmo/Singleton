using UnityEngine;
using System.Collections;

public class SingletonManager : MonoBehaviour
{
	protected static SingletonManager _instance;
	
	public static SingletonManager Instance
	{
		get
		{
			if (_instance == null)
			{
				_instance = (SingletonManager) FindObjectOfType(typeof(SingletonManager));
				
				if (_instance == null)
				{
					GameObject host = new GameObject();
					host.AddComponent<SingletonManager>();
					host.name += " [autogenerated]";
				}
			}
			
			return _instance;
		}
	}

	protected void onAwake()
	{
		if (_instance != null && _instance != this)
		{
			// WARNING! LOG ERROR MANUALLY HERE, BECAUSE DebugManager IS NOT AVAILABLE
			//	FOR A REASON THAT'LL BE OBVIOUS ONCE YOU THINK ABOUT IT A BIT. :)
			Debug.LogError ("Deleting duplicate SingletonManager!");
			Destroy(gameObject);
		}
		else
		{
			_instance = this;
			gameObject.name = "_" + this.GetType().ToString();
			DontDestroyOnLoad(gameObject);
		}
	}

	void Awake()
	{
		onAwake();
	}

	public GameObject CreateSingletonHost()
	{
		GameObject result = new GameObject();
		result.transform.parent = transform;
		result.transform.localPosition = Vector3.zero;
		result.transform.localScale = Vector3.one;

		return result;
	}
}
